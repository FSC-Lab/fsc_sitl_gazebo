<!-- DO NOT EDIT: Generated from iris.sdf.jinja -->
<sdf version='1.6'>
  <model name='single_iris_payload'>

    <!-- Basic Iris Model -->
    <include>
      <uri>model://iris</uri>
    </include>

    <!-- Basic camera model -->
    <include>
      <uri>model://rpi_cam</uri>
      <pose>0 0 0 0 1.5708 0</pose>
    </include>
    <!-- Link camera to the UAV -->
    <joint name="rpi_cam_joint" type="fixed">
      <child>rpi_cam::link</child>
      <parent>iris::base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

    <!-- Define payload model. We are defining our own model so that we can tag it -->
    <link name='payload_link'>
      <pose> 0 1.6 0 0 0 0 </pose>
      <velocity_decay>
        <linear>0.0</linear>
        <angular>0.0</angular>
      </velocity_decay>
      <gravity>1</gravity>
      <inertial>
        <mass>0.5</mass>
        <inertia>
          <ixx>0.1</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.1</iyy>
          <iyz>0</iyz>
          <izz>0.1</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.5 0.5 0.5</size>
          </box>
        </geometry>
      </collision>
      <visual name='visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.25 0.25 0.25</scale>
            <uri>model://iris_tagged_pld/meshes/tagged_cube_top.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- Define the cable -->
    <link name='cable_link'>
      <pose>0 0.675 0 1.57 0 0</pose>
      <kinematic>0</kinematic>
      <inertial>
        <mass>1e-3</mass>
        <inertia>
          <ixx>0.0000508</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000023</iyy>
          <iyz>0</iyz>
          <izz>0.000023</izz>
        </inertia>
      </inertial>
      <collision name='tether_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.001</radius>
            <length>1.35</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.00</mu>
              <mu2>0.00</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='tether_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.005</radius>
            <length>1.35</length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    <joint name='cable_to_payload' type='ball'>
      <parent>payload_link</parent>
      <child>cable_link</child>
      <pose>0 0 -0.675 0 0 0</pose>
    </joint>
    <joint name='cable_to_iris' type='ball'>
      <parent>iris::base_link</parent>
      <child>cable_link</child>
      <pose>0 0 0.675 0 0 0</pose>
    </joint>

    <plugin name="p3d_payload_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>payload_link</bodyName>
      <topicName>/ground_truth/payload/pose</topicName>
      <gaussianNoise>0</gaussianNoise>
      <frameName>/map</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>1.5708 0 0</rpyOffsets>
    </plugin>
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>iris::base_link</bodyName>
      <topicName>/ground_truth/uav/pose</topicName>
      <gaussianNoise>0</gaussianNoise>
      <frameName>/map</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </model>
</sdf>
